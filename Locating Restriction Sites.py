def getReverseComplement(s):
    sc = s.replace("A","X")
    sc = sc.replace("T","A")
    sc = sc.replace("X","T")

    sc = sc.replace("C","X")
    sc = sc.replace("G","C")
    sc = sc.replace("X","G")

    sc = sc[::-1]
    return sc

def isReversePalindrome(s):
    if( getReverseComplement(s).__eq__(s) ):
        return True
    return False


#print "GCATGC"
#print getReverseComplement("GCATGC")
#print isReversePalindrome("GCATGC")

s = "CGCGCCCGTGGGCCCGAGGAGGTTCTACCCGTTCCGCTGTATATCTGTTATGGCATGGTATAGACATCAAGGCCAGTGGGTGGCGCCGAGAAGTAGTTAAGCCCCTCAAGTATTTGTAAATGACTGTATTCATCCGTCCGGATAGGTCATTTAACTCCCGCGATGGATATTGAAACCATGGAGCACAGTGGAGCACCTCGTGTGACACAAATGCAGTTGAATGACGATCCCAGTTCTTGTCCCTGGTCGGCGTCTATGTATTTCCCGGGGGATTGCGACCACGCCAGCCTGAGTCCGCGCAGTGACGGTGACAATGGGAGGTCGACCTTTTCACAACCTCCGGGTTGATGGGTTTGGTCGGTAACGCGATCTTACCCGAATAAAGGGGTATGAAGTACTCCTATACCTATGTCTGTGAACTTTGTGAGTTACTCGTGTTGGGGAGCATTAGCCTGCTAGCATCACCCCCCCGCACAATTGTGCATGGTTGTGGATCTACCGCCCACGCAGTCTTTGTGTACAGATAACACGATAGCCGCCGCTATAAGCAGGTGCCGTATTTTGTCCTAACCGCTACTGACAGGGAAGTGCCACTTTCCTTCAATACTTGAGCTCGGCCCCGGAAACATGGTGGCATTCTGTTTTCCGCACACCGGCTGGACACGATCAATTGTGGAAGGGTTATCGCGGAGCACGTCGTGACGACGTCAGAGAAATTCAGTTATAGGGCGTGTGCGTTGGCCGCCGTAGGTGAAAGTACTGATAGCGGTACGTACTAAGCAGACATCAGAACACGACACTTCAATGGAACAGGGAACTGGGCCCCTGCGGCAACCAAGGCGCGTTTTTTGCCACATCGATAACTGCAGCATGGGATAGAGTCTCAACGATACGTCAGTAATAATCGCGCCATCTGGGTAGAATATATTTCACCGAGCACTTGACTGCAGCGCG"

for i in range(0,s.__len__()):
    for j in range(4,13):
        if isReversePalindrome(s[i:i+j]):
            if(i+j <= s.__len__()):
                print (i+1).__str__() + " " + j.__str__()
